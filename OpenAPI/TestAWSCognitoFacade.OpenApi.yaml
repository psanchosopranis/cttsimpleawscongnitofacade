openapi: 3.0.0
servers:
  - url: https://authdev01.cttexpress.local:443
    description: ''
info:
  version: 65d161da-c99a-4843-9cca-ae22022759b0
  title: TestAWSCognitoFacade
  description: >-
    Acceso securizado vía API REST directo a las operaciones expuestas por el API de AWS Cognito  
    para la gestion administritativa de usuarios.
    User Pool de Pruebas `uat-client-web-pool` en AWS Cognito en Irlanda (`eu-west-1`)
paths:
  /admin/healthcheck:
    get:
      summary: Comprobar que la aplicación esta activa (health-check)
      operationId: GEThealthcheck
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: HealthCheck Sucessful Response
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/200-HealthCheck-response'
              example:
                cttsimpleawscognitofacade:
                  healthy: true
                deadlocks:
                  healthy: true
      tags:
        - HealthCheck
  /awscognitofacade/simple/v1/rpc-force-user-password-reset/{user_email}:
    post:
      security:
        - basic: []
      summary: Force User Password Reset (RPC Style)  
      operationId: POST/rpc-force-user-password-reset/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'
        '409':
          description: CONFLICT-CONDITION (Condición de conflicto que impide la ejecución de la solicitud)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample409-01:
                  $ref: '#/components/examples/sample409-01'   
                sample409-02:
                  $ref: '#/components/examples/sample409-02'                                      
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-disable-user/{user_email}:
    post:
      security:
        - basic: []    
      summary: Disable User (RPC Style)
      operationId: POST/rpc-disable-user/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'                  
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-enable-user/{user_email}:
    post:
      security:
        - basic: []
      summary: Enable User (RPC Style)
      operationId: POST/rpc-enable-user/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'                    
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-delete-user/{user_email}:
    post:
      security:
        - basic: []    
      summary: Delete User (RPC Style)
      operationId: POST/rpc-delete-user/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'                    
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-retrieve-user-metadata/{user_email}:
    post:
      security:
        - basic: []    
      summary: Retrieve User Metadata (RPC Style)
      operationId: POST/rpc-retrieve-user-metadata/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: 'Metadatos del usuario'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/200-Retrieve-User-Metadata-response' 
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'                    
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-update-user-attributes/{user_email}:
    post:
      security:
        - basic: []    
      summary: Update User Attributes (RPC Style)
      operationId: POST/rpc-update-user-attributes/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
                sample401-02:
                  $ref: '#/components/examples/sample400-02'
                sample401-03:
                  $ref: '#/components/examples/sample400-03'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01' 
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'                    
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone_number
              properties:
                name:
                  description: 'Nombre y Apellidos del Usuario'
                  type: string
                  minLength: 5
                  maxLength: 64
                  example: Pablo SanchoSopranis Sampol
                phone_number:
                  description: 'Teléfono del Usuario'
                  type: string
                  minLength: 12
                  maxLength: 13
                  pattern: '^\\+\\d{11,12}$'
                  example: '+34666777888'
                custom_attributes:
                  type: object
                  properties:
                    custom:ctt_client_code:
                      type: string
                      example: 'TECHEDGE-01a'
                    custom:ctt_agency_code:
                      type: string
                      example: 'TECHEDGE-01b'
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-update-user-custom-attributes/{user_email}:
    post:
      security:
        - basic: []    
      summary: Update User Custom Attributes only (RPC Style).
      operationId: POST/rpc-update-user-custom-attributes/{user_email}
      parameters:
        - $ref: '#/components/parameters/user_email'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample400-01'
                sample401-03:
                  $ref: '#/components/examples/sample400-03'                  
                sample401-04:
                  $ref: '#/components/examples/sample400-04'
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '404':
          description: USER-NOT-FOUND (No existe usuario con el eMail indicado)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample404-01'  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - custom_attributes
              properties:
                custom_attributes:
                  type: object
                  properties:
                    custom:ctt_client_code:
                      type: string
                      example: 'TECHEDGE-01a'
                    custom:ctt_agency_code:
                      type: string
                      example: 'TECHEDGE-01b'
      tags:
        - AdminUserTasks
  /awscognitofacade/simple/v1/rpc-create-user:
    post:
      security:
        - basic: []    
      summary: Create a New User (RPC Style)
      operationId: POST/rpc-create-user
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '204':
          description: 'The operation requested was successful (NO Body Content is returned)'
        '400':
          description: BAD-REQUEST (Datos o Identificadores NO VÁLIDOS)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-02:
                  $ref: '#/components/examples/sample400-02'
                sample401-03:
                  $ref: '#/components/examples/sample400-03'                  
        '401':
          description: UNAUTHORIZED (invalid or missing Basic Auth credentials)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample401-01:
                  $ref: '#/components/examples/sample401-01'
        '409':
          description: CONFLICT-CONDITION (Condición de conflicto que impide la ejecución de la solicitud)
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/common-error-response' 
              examples:
                sample409-03:
                  $ref: '#/components/examples/sample409-03'   
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - phone_number
              properties:
                email:
                  type: string
                  pattern: '^\\+\\d{11,12}$'
                  description: 'eMail del Usuario (debe ser un eMail válido)'
                  example: psanchosopranis@gmail.com
                name:
                  description: 'Nombre y Apellidos del Usuario'
                  type: string
                  minLength: 5
                  maxLength: 64
                  example: Pablo SanchoSopranis Sampol
                phone_number:
                  description: 'Teléfono del Usuario'
                  type: string
                  minLength: 12
                  maxLength: 13
                  pattern: '^\\+\\d{11,12}$'
                  example: '+34666777888'
                custom_attributes:
                  type: object
                  properties:
                    custom:ctt_client_code:
                      type: string
                      example: 'TECHEDGE-01a'
                    custom:ctt_agency_code:
                      type: string
                      example: 'TECHEDGE-01b'
      tags:
        - AdminUserTasks
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      style: simple
      schema:
        type: string
        example: application/json
    user_email:
      name: user_email
      in: path
      required: true
      style: simple
      schema:
        type: string
        pattern: '^\\+\\d{11,12}$'
        description: 'eMail del Usuario (debe ser un eMail válido)'
        example: psanchosopranis@gmail.com
    Content-Type:
      name: Content-Type
      in: header
      required: true
      style: simple
      schema:
        type: string
        example: application/json
  schemas:
    '200-HealthCheck-response':
      type: object
      properties:
        cttsimpleawscognitofacade:
          type: object
          description: 'App Status'
          properties:
            healthy:
              type: boolean
        deadlocks:
          type: object
          description: 'Deadlocks Status'
          properties:
            healthy:
              type: boolean
    '200-Retrieve-User-Metadata-response':
      type: object
      properties:
        user_id:
          type: string
          example: 'e3b75952-bc4e-4cab-bb0b-1b97d378b18d'
        user_status:
          type: string
          example: 'CONFIRMED'
        user_is_enabled:
          type: boolean
          example: true,
        user_create_date:
          type: string
          example: 'Mon Aug 16 15:18:07 CEST 2021'
        user_last_modified_date:
          type: string
          example: 'Mon Aug 16 17:57:57 CEST 2021'
        user_attributes: 
          type: object
          properties:
            sub:
              type: string
              example: 'e3b75952-bc4e-4cab-bb0b-1b97d378b18d'
            email:
              type: string
              example: 'psanchosopranis@gmail.com'
            email_verified:
              type: boolean
              example: true
            name:
              type: string
              example: 'Pablo Sancho-Sopranis Sampol'
            phone_number_verified:
              type: boolean
              example: true
            phone_number:
              type: string
              example: '+34650711077'
            custom:ctt_agency_code:
              type: string
              example: 'TECHEDGE-01a'
            custom:ctt_client_code:
              type: string
              example: 'TECHEDGE-01b'          
    'common-error-response':
      type: object
      properties:
        errorId:
          type: string
          description: 'Identificador del Error'
        errorAlias:
          type: string
          description: 'Identificador (alias) del Error'
        errorMessages:
          type: array 
          description: 'Lineas con información adicionales de la(s) condicion(es) de error.'
          items:
            type: string
  examples:
    sample400-01:
      summary: 'ERR-400-BAD-REQUEST-01'
      value:
        errorId: 'BAD-REQUEST'
        errorAlias": 'error-validacion-datos-para-operacion'
        errorMessages": 
        - 'excepcion:io.dropwizard.jersey.validation.JerseyViolationException[ (mensaje de error no disponible)]'        
        - 'param userEmail: tiene que corresponder a la expresión regular "^[A-Za-z0-9+_.-]+@(.+)$"'
    sample400-02:
      summary: 'ERR-400-BAD-REQUEST-02'
      value:
        errorId: 'VAL-ERROR-001'
        errorAlias": 'data-validation-error'
        errorMessages": 
        - 'phone_number: la longitud tiene que estar entre 12 y 13'        
        - 'phone_number: tiene que corresponder a la expresión regular "^\+\d{11,12}$"'
        - 'name: no puede estar vacío'
    sample400-03:
      summary: 'ERR-400-BAD-REQUEST-03'
      value:
        errorId: 'BAD-REQUEST'
        errorAlias": 'Se han enviado atributos/parámetros para el usuario [psanchosopranis@gmail.com] no incluidos en el esquema configurado en el user Pool.'
        errorMessages": 
        - 'mensaje:com.cttexpress.rest.exceptions.CustomException[ software.amazon.awssdk.services.cognitoidentityprovider.model.InvalidParameterException: user.custom:ctt_client_codeX: Attribute does not exist in the schema.\n (Service: CognitoIdentityProvider, Status Code: 400, Request ID: feb86706-b5a2-4196-b284-1ca67e6cf5c0, Extended Request ID: null)]'        
        - 'causa interna:software.amazon.awssdk.services.cognitoidentityprovider.model.InvalidParameterException[ user.custom:ctt_client_codeX: Attribute does not exist in the schema.\n (Service: CognitoIdentityProvider, Status Code: 400, Request ID: feb86706-b5a2-4196-b284-1ca67e6cf5c0, Extended Request ID: null)]'
    sample400-04:
      summary: 'ERR-400-BAD-REQUEST-04'
      value:
        errorId: 'VAL-ERROR-001'
        errorAlias": 'data-validation-error'
        errorMessages": 
        - 'custom_attributes: Se ha enviado una colección NULA o VACIA de `custom_attributes`.'        
    sample401-01:
      summary: 'ERR-401-UNAUTHORIZED'
      value:
        errorId: 'ERR-401-UNAUTHORIZED'
        errorAlias": 'invalid-or-missing-credentials'
        errorMessages": 
        - 'Se requieren credenciales válidas (y activas) para acceder a este recurso.'
    sample404-01:
      summary: 'ERR-404-NOT-FOUND'
      value:
        errorId: 'USER-NOT-FOUND'
        errorAlias": 'El usuario [psanchosopranisX@gmail.com] no existe en el user Pool.'
        errorMessages": 
        - 'mensaje:com.cttexpress.rest.exceptions.CustomException[ software.amazon.awssdk.services.cognitoidentityprovider.model.UserNotFoundException: User does not exist. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: b7330534-f0ac-48e9-a76e-f399a0b0a5b6, Extended Request ID: null)]'
        - 'causa interna:software.amazon.awssdk.services.cognitoidentityprovider.model.UserNotFoundException[ User does not exist. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: b7330534-f0ac-48e9-a76e-f399a0b0a5b6, Extended Request ID: null)]'        
    sample409-01:
      summary: 'ERR-409-CONFLICT-CONDITION-01'
      value:
        errorId: 'CONFLICT-CONDITION-REQUEST-CANNOT-BE-COMPLETED'
        errorAlias": 'A conflict condition prevents request to be successfully completed.'
        errorMessages": 
        - 'mensaje:com.cttexpress.rest.exceptions.CustomException[ software.amazon.awssdk.services.cognitoidentityprovider.model.NotAuthorizedException: User password cannot be reset in the current state. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: cd1335a4-f8d8-46c0-bd62-3b2f34776123, Extended Request ID: null)]'
        - 'causa interna:software.amazon.awssdk.services.cognitoidentityprovider.model.NotAuthorizedException[ User password cannot be reset in the current state. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: cd1335a4-f8d8-46c0-bd62-3b2f34776123, Extended Request ID: null)]'        
    sample409-02:
      summary: 'ERR-409-CONFLICT-CONDITION-02'
      value:
        errorId: 'USER-IS-DISABLED'
        errorAlias": 'El usuario [psanchosopranis@gmail.com] está DESHABILITADO.'
        errorMessages": 
        - 'mensaje:com.cttexpress.rest.exceptions.CustomException[ software.amazon.awssdk.services.cognitoidentityprovider.model.NotAuthorizedException: User is disabled. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: 2e8bb9da-0439-4aaa-bde8-e5fc04e9f4c4, Extended Request ID: null)]'
        - 'causa interna:software.amazon.awssdk.services.cognitoidentityprovider.model.NotAuthorizedException[ User is disabled. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: 2e8bb9da-0439-4aaa-bde8-e5fc04e9f4c4, Extended Request ID: null)]'
    sample409-03:
      summary: 'ERR-409-CONFLICT-CONDITION-03'
      value:
        errorId: 'USER-WITH-SAME-EMAIL-ALREADY-EXISTS'
        errorAlias": 'Ya existe un usuario con el mismo eMail [psanchosopranis@gmail.com] en el user Pool.'
        errorMessages": 
        - 'mensaje:com.cttexpress.rest.exceptions.CustomException[ software.amazon.awssdk.services.cognitoidentityprovider.model.UsernameExistsException: An account with the given email already exists. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: 6ce275f8-2362-4cf7-aa03-41a93a603495, Extended Request ID: null)]'
        - 'causa interna:software.amazon.awssdk.services.cognitoidentityprovider.model.UsernameExistsException[ An account with the given email already exists. (Service: CognitoIdentityProvider, Status Code: 400, Request ID: 6ce275f8-2362-4cf7-aa03-41a93a603495, Extended Request ID: null)]'
  securitySchemes:
    basic:
      type: http
      scheme: basic


